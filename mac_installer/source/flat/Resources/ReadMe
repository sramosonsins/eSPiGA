eSPiGA: A Population Genomic Analyses Package with Graphical Interface

eSPIGA is a software package designed for the analysis of genome variability of multiple populations, specifically focused on the analyses of variant frequencies. The package can work with multiple format alignment (gVCF, fasta, tFasta and ms), annotation files (GFF/GTF) and additional filter files. A common problem using High-Throughput Sequence data is to deal with large quantity of missing data, which can substantially restrict the analysis of variability to few regions, or perform it with a reduced number of statistics. Here, the core of the package, mstatspop, calculates an extended number of population and variability-related statistics and neutrality test accounting for positions including missing data. In addition, optimal neutrality tests are for first time implemented. A number of file outputs are available, including simple text tables, Site Frequency Spec- trum for one or several populations, output files to be used in other softwares, file showing sliding window stats and fully extended formats. Finally, filtering options are available to obtain the desired output.

eSPIGA provides a user-friendly graphical user interface (GUI), which helps to the user to chose the options and necessary flags for the analysis of sequence variability. The final result is a file with all the statistics obtained from the performed analysis. These results can be showed in a tab-formatted table in the interface. The interface is divided in three main sections: (i) pre-processing: where sequence format converters, annotation files and additional filtered op- tions are managed to be ready for the analysis with mstatspop program, (ii) anal- ysis: calculation of all statistics given the desired options of the user, including sequence and annotation files, and (iii) post-processing: the obtained statistics are showed and can be filtered from the whole output file(s) and released in text tab separated tables. A window including all the selected commands are visualised at the bottom of the interface. these commands can be copied and included in a file or directly run on a terminal. This framework allows a fast automation of pipelines for posterior analysis.
